{
    "$schema": "http://json-schema.org/draft-07/schema",
    "$id": "https://raw.githubusercontent.com/nf-core/metaboigniter/master/nextflow_schema.json",
    "title": "nf-core/metaboigniter pipeline parameters",
    "description": "Pre-processing of mass spectrometry-based metabolomics data",
    "type": "object",
    "definitions": {
        "generic_controls": {
            "title": "Generic controls",
            "type": "object",
            "description": "",
            "default": "",
            "properties": {
                "skip_centroiding": {
                    "type": "boolean",
                    "default": true,
                    "hidden": true,
                    "description": "If true, the centroiding will be skipped"
                },
                "skip_alignment": {
                    "type": "boolean",
                    "hidden": true,
                    "description": "If true, the alignment will be skipped"
                },
                "skip_adduct_detection": {
                    "type": "boolean",
                    "hidden": true,
                    "description": "If true, the adduct detection will be skipped"
                },
                "requantification": {
                    "type": "boolean",
                    "description": "If set to true, requantification will be performed"
                },
                "identification": {
                    "type": "boolean",
                    "description": "If set to true, identification will be performed. Remember to set identification specific parameters"
                },
                "polarity": {
                    "type": "string",
                    "default": "positive",
                    "enum": ["positive", "negative"],
                    "description": "Polarity of the data"
                },
                "parallel_linking": {
                    "type": "boolean",
                    "description": "If set, the linking will be performed in parallel, see nr_partitions in linking"
                },
                "ms2_collection_model": {
                    "type": "string",
                    "default": "paired",
                    "enum": ["separate", "paired"],
                    "description": "Set wether the MS2 collections have been done on all the MS1 data. If there is a separate MS2 file, set to separate"
                }
            }
        },
        "mapping_and_identification": {
            "title": "Mapping and Identification",
            "type": "object",
            "description": "",
            "default": "",
            "properties": {
                "offline_model_ms2query": {
                    "type": "boolean",
                    "hidden": true,
                    "description": "If set, the workflow expects the models to be in models_dir_ms2query"
                },
                "models_dir_ms2query": {
                    "type": "string",
                    "default": "models",
                    "hidden": true,
                    "description": "If running offline, this directory has to contain all the files necessary for running MS2Query"
                },
                "train_library_ms2query": {
                    "type": "boolean",
                    "hidden": true,
                    "description": "If set, the model training will be performed using library_path_ms2query"
                },
                "library_path_ms2query": {
                    "type": "string",
                    "hidden": true,
                    "description": "path to ms2query library"
                },
                "mgf_splitmgf_pyopenms": {
                    "type": "integer",
                    "default": 1,
                    "hidden": true,
                    "description": "If higher than one, parameter files will be split into the selected number. The result of the identification will be perform on each part separately"
                },
                "mz_tolerance_pyopenms": {
                    "type": "number",
                    "default": 20,
                    "description": "mz tolerance (ppm) for finding C13"
                },
                "rt_tolerance_pyopenms": {
                    "type": "number",
                    "default": 5,
                    "description": "rt tolerance for finding C13"
                },
                "annotate_ids_with_subelements_pyopenms": {
                    "type": "boolean",
                    "default": true,
                    "hidden": true,
                    "description": "Store the map index of the sub-feature in the peptide ID."
                },
                "measure_from_subelements_pyopenms": {
                    "type": "boolean",
                    "default": true,
                    "hidden": true,
                    "description": "Match using RT and m/z of sub-features instead of consensus RT and m/z. A consensus feature matches if any of its sub-features matches."
                },
                "ms2_use_feature_ionization": {
                    "type": "boolean",
                    "description": "If set, detected adduct will be used in identification"
                },
                "ms2_feature_selection": {
                    "type": "string",
                    "default": "quality",
                    "enum": ["quality", "intensity"],
                    "hidden": true,
                    "description": "whether feature quality or intensity should be used for feature selection"
                },
                "ms2_normalized_intensity": {
                    "type": "boolean",
                    "default": true,
                    "hidden": true,
                    "description": "If ture, normalized intesity will be used for selecting the best feature"
                },
                "ms2_iterations": {
                    "type": "integer",
                    "default": 3,
                    "hidden": true,
                    "description": "Number of iterations that should be performed to extract the C13 isotope pattern. If no peak is found (C13 distance) the function will abort. Be careful with noisy data - since this can lead to wrong isotope patterns"
                },
                "ms2_ppm_map": {
                    "type": "number",
                    "default": 10,
                    "hidden": true,
                    "description": "PPM for detecting MS C13"
                },
                "sirius_project_maxmz": {
                    "type": "number",
                    "default": -1,
                    "hidden": true,
                    "description": "Just consider compounds with a precursor mz lower or                                                         equal                                                        this maximum mz. All other compounds in the input file are ignored.="
                },
                "sirius_project_loglevel": {
                    "type": "string",
                    "default": "WARNING",
                    "hidden": true,
                    "description": "Set logging level of the Jobs SIRIUS will execute.                                                        Valid values: SEVERE, WARNING, INFO, FINER, ALL",
                    "enum": ["SEVERE", "WARNING", "INFO", "FINER", "ALL"]
                },
                "sirius_project_ignore_formula": {
                    "type": "boolean",
                    "hidden": true,
                    "description": "Ignore given molecular formula in internal .ms format, while processing."
                },
                "sirius_sirius_ppm_max": {
                    "type": "number",
                    "default": 10,
                    "description": "Maximum allowed mass deviation in ppm for decomposing  masses (ppm)"
                },
                "sirius_sirius_ppm_max_ms2": {
                    "type": "number",
                    "default": 10,
                    "description": "Maximum allowed mass deviation in ppm for decomposing masses in MS2 (ppm).If not specified, the same value as for the MS1 is used."
                },
                "sirius_sirius_tree_timeout": {
                    "type": "number",
                    "default": 100,
                    "hidden": true,
                    "description": "Time out in seconds per fragmentation tree computations. 0 for an infinite amount of time"
                },
                "sirius_sirius_compound_timeout": {
                    "type": "number",
                    "default": 100,
                    "hidden": true,
                    "description": "Time out in seconds per fragmentation tree computations. 0 for an infinite amount of time"
                },
                "sirius_sirius_no_recalibration": {
                    "type": "boolean",
                    "description": "Disable recalibration of input spectra"
                },
                "sirius_sirius_profile": {
                    "type": "string",
                    "default": "default",
                    "enum": ["default", "qtof", "orbitrap", "fticr"],
                    "description": "Name of the configuration profile"
                },
                "sirius_sirius_formulas": {
                    "type": "string",
                    "description": "Specify the neutral molecular formula of the measured compound to compute its tree or a list of candidate formulas the method should discriminate. Omit this option if you want to consider all possible molecular formulas",
                    "hidden": true
                },
                "sirius_sirius_ions_enforced": {
                    "type": "string",
                    "description": "The iontype/adduct of the MS/MS data. Example: [M+H]+, [M-H]-, [M+Cl]-, [M+Na]+, [M]+. You can also provide a comma separated list of adducts.",
                    "hidden": true
                },
                "sirius_sirius_candidates": {
                    "type": "integer",
                    "default": 10,
                    "description": "The number of formula candidates in the SIRIUS output"
                },
                "sirius_sirius_candidates_per_ion": {
                    "type": "integer",
                    "default": 1,
                    "description": "Minimum number of candidates in the output for each ionization. Set to force output of results for each possible ionization, even if not part of highest ranked results."
                },
                "sirius_sirius_elements_considered": {
                    "type": "string",
                    "default": "SBrClBSe",
                    "description": "Set the allowed elements for rare element detection. Write SBrClBSe to allow the elements S,Br,Cl,B and Se.",
                    "hidden": true
                },
                "sirius_sirius_elements_enforced": {
                    "type": "string",
                    "default": "CHNOP",
                    "description": "Enforce elements for molecular formula determination. Write CHNOPSCl to allow the elements C, H, N, O, P, S and Cl. Add numbers in brackets to restrict the minimal and maximal allowed occurrence of these elements: CHNOP[5]S[8]Cl[1-2]. When one number is given then it is interpreted as upper bound.",
                    "hidden": true
                },
                "sirius_sirius_no_isotope_score": {
                    "type": "boolean",
                    "description": "Disable isotope pattern score.",
                    "hidden": true
                },
                "sirius_sirius_no_isotope_filter": {
                    "type": "boolean",
                    "description": "Disable molecular formula filter. When filtering is enabled, molecular formulas are excluded if their theoretical isotope pattern does not match the theoretical one, even if their MS/MS pattern has high score.",
                    "hidden": true
                },
                "sirius_sirius_ions_considered": {
                    "type": "string",
                    "default": "[M+H]+,[M+K]+,[M+Na]+,[M+H-H2O]+,[M+H-H4O2]+,[M+NH4]+,[M-H]-,[M+Cl]-,[M-H2O-H]-,[M+Br]-",
                    "description": "the iontype/adduct of the MS/MS data. Example: [M+H]+, [M-H]-, [M+Cl]-, [M+Na]+, [M]+. You can also provide a comma separated list of adducts."
                },
                "sirius_sirius_db": {
                    "type": "string",
                    "description": "Search formulas in the Union of the given databases db-name1,db-name2,db-name3. If no database is given all possible molecular formulas will be respected (no database is used). Example: possible DBs: ALL,BIO,PUBCHEM,MESH,HMDB,KNAPSACK,CHEBI,PUBMED,KEGG,HSDB,MACONDA,METACYC,GNPS,ZINCBIO,UNDP,YMDB,PLANTCYC,NORMAN,ADDITIONAL,PUBCHEMANNOTATIONBIO,PUBCHEMANNOTATIONDRUG,PUBCHEMANNOTATIONSAFETYANDTOXIC,PUBCHEMANNOTATIONFOOD,KEGGMINE,ECOCYCMINE,YMDBMINE"
                },
                "sirius_runpassatutto": {
                    "type": "boolean",
                    "description": "If set, passatutto will be run"
                },
                "sirius_fingerid_db": {
                    "type": "string",
                    "description": "Search structures in the Union of the given databases db-name1,db-name2,db-name3. If no database is given all possible molecular formulas will be respected (no database is used). Example: possible DBs: ALL,BIO,PUBCHEM,MESH,HMDB,KNAPSACK,CHEBI,PUBMED,KEGG,HSDB,MACONDA,METACYC,GNPS,ZINCBIO,UNDP,YMDB,PLANTCYC,NORMAN,ADDITIONAL,PUBCHEMANNOTATIONBIO,PUBCHEMANNOTATIONDRUG,PUBCHEMANNOTATIONSAFETYANDTOXIC,PUBCHEMANNOTATIONFOOD,KEGGMINE,ECOCYCMINE,YMDBMINE"
                },
                "sirius_sirius_solver": {
                    "type": "string",
                    "default": "CLP",
                    "description": "For GUROBI and CPLEX environment variables need to be configured.",
                    "hidden": true
                },
                "sirius_email": {
                    "type": "string",
                    "description": "E-mail for your SIRIUS account."
                },
                "sirius_password": {
                    "type": "string",
                    "description": "Password for your SIRIUS account."
                },
                "sirius_split": {
                    "type": "boolean",
                    "description": "If set, SIRIUS will be run in parallel. See mgf_splitmgf_pyopenms parameter for segmentation"
                },
                "split_consensus_parts": {
                    "type": "integer",
                    "default": 20,
                    "description": "For running MS2 mapping in parallel set this higher than 1"
                },
                "run_ms2query": {
                    "type": "boolean",
                    "description": "If set, MS2Query will be run"
                },
                "sirius_runfid": {
                    "type": "boolean",
                    "description": "If set, FingerID will be run. This has to be run together with run_sirius"
                },
                "run_sirius": {
                    "type": "boolean",
                    "description": "If set SIRIUS will run"
                },
                "run_umapped_spectra": {
                    "type": "boolean",
                    "description": "If set identification will be performed on unmapped MS2 spectra",
                    "hidden": true
                }
            }
        },
        "annotation": {
            "title": "Annotation",
            "type": "object",
            "description": "",
            "default": "",
            "properties": {
                "algorithm_metabolitefeaturedeconvolution_charge_min_metaboliteadductdecharger_openms": {
                    "type": "integer",
                    "default": 1,
                    "hidden": false,
                    "description": "Minimal possible charge"
                },
                "algorithm_metabolitefeaturedeconvolution_charge_max_metaboliteadductdecharger_openms": {
                    "type": "integer",
                    "default": 1,
                    "hidden": false,
                    "description": "Maximal possible charge"
                },
                "algorithm_metabolitefeaturedeconvolution_charge_span_max_metaboliteadductdecharger_openms": {
                    "type": "integer",
                    "hidden": false,
                    "description": "Maximal range of charges for a single analyte, i.e. observing q1=[5,6,7] implies span=3. Setting this to 1 will only find adduct variants of the same charge",
                    "default": 1
                },
                "algorithm_metabolitefeaturedeconvolution_q_try_metaboliteadductdecharger_openms": {
                    "type": "string",
                    "default": "feature",
                    "hidden": false,
                    "description": "Try different values of charge for each feature according to the above settings ('heuristic' [does not test all charges, just the likely ones] or 'all' ), or leave feature charge untouched ('feature').",
                    "enum": ["feature", "heuristic", "all"]
                },
                "algorithm_metabolitefeaturedeconvolution_retention_max_diff_metaboliteadductdecharger_openms": {
                    "type": "number",
                    "default": 1,
                    "hidden": false,
                    "description": "Maximum allowed RT difference between any two features if their relation shall be determined"
                },
                "algorithm_metabolitefeaturedeconvolution_retention_max_diff_local_metaboliteadductdecharger_openms": {
                    "type": "number",
                    "default": 1,
                    "hidden": false,
                    "description": "Maximum allowed RT difference between between two co-features, after adduct shifts have been accounted for (if you do not have any adduct shifts, this value should be equal to 'retention_max_diff', otherwise it should be smaller!)"
                },
                "algorithm_metabolitefeaturedeconvolution_mass_max_diff_metaboliteadductdecharger_openms": {
                    "type": "number",
                    "hidden": false,
                    "description": "Maximum allowed mass tolerance per feature. Defines a symmetric tolerance window around the feature. When looking at possible feature pairs, the allowed feature-wise errors are combined for consideration of possible adduct shifts. For ppm tolerances, each window is based on the respective observed feature mz (instead of putative experimental mzs causing the observed one)!",
                    "default": 5
                },
                "algorithm_metabolitefeaturedeconvolution_unit_metaboliteadductdecharger_openms": {
                    "type": "string",
                    "default": "ppm",
                    "hidden": false,
                    "description": "Unit of the 'max_difference' parameter",
                    "enum": ["Da", "ppm"]
                },
                "algorithm_metabolitefeaturedeconvolution_max_neutrals_metaboliteadductdecharger_openms": {
                    "type": "integer",
                    "default": 1,
                    "hidden": false,
                    "description": "Maximal number of neutral adducts(q=0) allowed. Add them in the 'potential_adducts' section!"
                },
                "algorithm_metabolitefeaturedeconvolution_use_minority_bound_metaboliteadductdecharger_openms": {
                    "type": "boolean",
                    "default": true,
                    "hidden": false,
                    "description": "Prune the considered adduct transitions by transition probabilities."
                },
                "algorithm_metabolitefeaturedeconvolution_max_minority_bound_metaboliteadductdecharger_openms": {
                    "type": "integer",
                    "hidden": false,
                    "description": "Limits allowed adduct compositions and changes between compositions in the underlying graph optimization problem by introducing a probability-based threshold: the minority bound sets the maximum count of the least probable adduct (according to 'potential_adducts' param) within a charge variant with maximum charge only containing the most likely adduct otherwise. E.g., for 'charge_max' 4 and 'max_minority_bound' 2 with most probable adduct being H+ and least probable adduct being Na+, this will allow adduct compositions of '2(H+),2(Na+)' but not of '1(H+),3(Na+)'. Further, adduct compositions/changes less likely than '2(H+),2(Na+)' will be discarded as well.",
                    "default": 1
                },
                "algorithm_metabolitefeaturedeconvolution_min_rt_overlap_metaboliteadductdecharger_openms": {
                    "type": "number",
                    "hidden": false,
                    "description": "Minimum overlap of the convex hull' RT intersection measured against the union from two features (if CHs are given)",
                    "default": 0.66
                },
                "algorithm_metabolitefeaturedeconvolution_intensity_filter_metaboliteadductdecharger_openms": {
                    "type": "boolean",
                    "hidden": false,
                    "description": "Enable the intensity filter, which will only allow edges between two equally charged features if the intensity of the feature with less likely adducts is smaller than that of the other feature. It is not used for features of different charge."
                },
                "algorithm_metabolitefeaturedeconvolution_default_map_label_metaboliteadductdecharger_openms": {
                    "type": "string",
                    "default": "'decharged features'",
                    "hidden": true,
                    "description": "Label of map in output consensus file where all features are put by default"
                },
                "adducts_pos": {
                    "type": "string",
                    "default": "H:+:0.6 Na:+:0.1 NH4:+:0.1 H-1O-1:+:0.1 H-3O-2:+:0.1",
                    "description": "possible positive adducts for adduct detection in the format of adduct:charge:probablity"
                },
                "adducts_neg": {
                    "type": "string",
                    "default": "H-1:-:0.8 H-3O-1:-:0.2",
                    "description": "possible negative adducts for adduct detection in the format of adduct:charge:probablity"
                }
            }
        },
        "alignment_and_linking": {
            "title": "Alignment and Linking",
            "type": "object",
            "description": "",
            "default": "",
            "properties": {
                "algorithm_max_num_peaks_considered_mapalignerposeclustering_openms": {
                    "type": "integer",
                    "hidden": false,
                    "description": "The maximal number of peaks/features to be considered per map. To use all, set to '-1'.",
                    "default": 1000
                },
                "algorithm_superimposer_mz_pair_max_distance_mapalignerposeclustering_openms": {
                    "type": "number",
                    "hidden": false,
                    "description": "Maximum of m/z deviation of corresponding elements in different maps.  This condition applies to the pairs considered in hashing.",
                    "default": 0.5
                },
                "algorithm_superimposer_rt_pair_distance_fraction_mapalignerposeclustering_openms": {
                    "type": "number",
                    "hidden": true,
                    "description": "Within each of the two maps, the pairs considered for pose clustering must be separated by at least this fraction of the total elution time interval (i.e., max - min).  ",
                    "default": 0.1
                },
                "algorithm_superimposer_num_used_points_mapalignerposeclustering_openms": {
                    "type": "integer",
                    "hidden": false,
                    "description": "Maximum number of elements considered in each map (selected by intensity).  Use this to reduce the running time and to disregard weak signals during alignment.  For using all points, set this to -1.",
                    "default": 2000
                },
                "algorithm_superimposer_scaling_bucket_size_mapalignerposeclustering_openms": {
                    "type": "number",
                    "hidden": true,
                    "description": "The scaling of the retention time interval is being hashed into buckets of this size during pose clustering.  A good choice for this would be a bit smaller than the error you would expect from repeated runs.",
                    "default": 0.005
                },
                "algorithm_superimposer_shift_bucket_size_mapalignerposeclustering_openms": {
                    "type": "number",
                    "hidden": true,
                    "description": "The shift at the lower (respectively, higher) end of the retention time interval is being hashed into buckets of this size during pose clustering.  A good choice for this would be about the time between consecutive MS scans."
                },
                "algorithm_superimposer_max_shift_mapalignerposeclustering_openms": {
                    "type": "number",
                    "hidden": true,
                    "description": "Maximal shift which is considered during histogramming (in seconds).  This applies for both directions."
                },
                "algorithm_superimposer_max_scaling_mapalignerposeclustering_openms": {
                    "type": "number",
                    "hidden": true,
                    "description": "Maximal scaling which is considered during histogramming.  The minimal scaling is the reciprocal of this."
                },
                "algorithm_superimposer_dump_buckets_mapalignerposeclustering_openms": {
                    "type": "string",
                    "hidden": true,
                    "description": "[DEBUG] If non-empty, base filename where hash table buckets will be dumped to.  A serial number for each invocation will be appended automatically."
                },
                "algorithm_superimposer_dump_pairs_mapalignerposeclustering_openms": {
                    "type": "string",
                    "hidden": true,
                    "description": "[DEBUG] If non-empty, base filename where the individual hashed pairs will be dumped to (large!).  A serial number for each invocation will be appended automatically."
                },
                "algorithm_pairfinder_second_nearest_gap_mapalignerposeclustering_openms": {
                    "type": "number",
                    "hidden": true,
                    "description": "Only link features whose distance to the second nearest neighbors (for both sides) is larger by 'second_nearest_gap' than the distance between the matched pair itself."
                },
                "algorithm_pairfinder_use_identifications_mapalignerposeclustering_openms": {
                    "type": "boolean",
                    "hidden": true,
                    "description": "Never link features that are annotated with different peptides (features without ID's always match; only the best hit per peptide identification is considered)."
                },
                "algorithm_pairfinder_ignore_charge_mapalignerposeclustering_openms": {
                    "type": "boolean",
                    "hidden": false,
                    "description": "false [default]: pairing requires equal charge state (or at least one unknown charge '0'); true: Pairing irrespective of charge state"
                },
                "algorithm_pairfinder_ignore_adduct_mapalignerposeclustering_openms": {
                    "type": "boolean",
                    "default": true,
                    "hidden": true,
                    "description": "true [default]: pairing requires equal adducts (or at least one without adduct annotation); true: Pairing irrespective of adducts"
                },
                "algorithm_pairfinder_distance_rt_max_difference_mapalignerposeclustering_openms": {
                    "type": "number",
                    "hidden": false,
                    "description": "Never pair features with a larger RT distance (in seconds).",
                    "default": 100.0
                },
                "algorithm_pairfinder_distance_rt_exponent_mapalignerposeclustering_openms": {
                    "type": "number",
                    "hidden": true,
                    "description": "Normalized RT differences ([0-1], relative to 'max_difference') are raised to this power (using 1 or 2 will be fast, everything else is REALLY slow)"
                },
                "algorithm_pairfinder_distance_rt_weight_mapalignerposeclustering_openms": {
                    "type": "number",
                    "hidden": true,
                    "description": "Final RT distances are weighted by this factor"
                },
                "algorithm_pairfinder_distance_mz_max_difference_mapalignerposeclustering_openms": {
                    "type": "number",
                    "hidden": false,
                    "description": "Never pair features with larger m/z distance (unit defined by 'unit')",
                    "default": 0.3
                },
                "algorithm_pairfinder_distance_mz_unit_mapalignerposeclustering_openms": {
                    "type": "string",
                    "default": "Da",
                    "hidden": false,
                    "description": "Unit of the 'max_difference' parameter",
                    "enum": ["Da", "ppm"]
                },
                "algorithm_pairfinder_distance_mz_exponent_mapalignerposeclustering_openms": {
                    "type": "number",
                    "hidden": true,
                    "description": "Normalized ([0-1], relative to 'max_difference') m/z differences are raised to this power (using 1 or 2 will be fast, everything else is REALLY slow)"
                },
                "algorithm_pairfinder_distance_mz_weight_mapalignerposeclustering_openms": {
                    "type": "number",
                    "hidden": true,
                    "description": "Final m/z distances are weighted by this factor"
                },
                "algorithm_pairfinder_distance_intensity_exponent_mapalignerposeclustering_openms": {
                    "type": "number",
                    "hidden": true,
                    "description": "Differences in relative intensity ([0-1]) are raised to this power (using 1 or 2 will be fast, everything else is REALLY slow)"
                },
                "algorithm_pairfinder_distance_intensity_weight_mapalignerposeclustering_openms": {
                    "type": "number",
                    "hidden": true,
                    "description": "Final intensity distances are weighted by this factor"
                },
                "algorithm_pairfinder_distance_intensity_log_transform_mapalignerposeclustering_openms": {
                    "type": "string",
                    "default": "disabled",
                    "hidden": true,
                    "description": "Log-transform intensities? If disabled, d = |int_f2 - int_f1| / int_max. If enabled, d = |log(int_f2 + 1) - log(int_f1 + 1)| / log(int_max + 1))",
                    "enum": ["enabled", "disabled"]
                },
                "algorithm_mz_unit_featurelinkerunlabeledkd_openms": {
                    "type": "string",
                    "default": "ppm",
                    "hidden": false,
                    "description": "Unit of m/z tolerance",
                    "enum": ["ppm", "Da"]
                },
                "algorithm_nr_partitions_featurelinkerunlabeledkd_openms": {
                    "type": "integer",
                    "hidden": false,
                    "description": "Number of partitions in m/z space",
                    "default": 100
                },
                "algorithm_warp_enabled_featurelinkerunlabeledkd_openms": {
                    "type": "boolean",
                    "default": true,
                    "hidden": false,
                    "description": "Whether or not to internally warp feature RTs using LOWESS transformation before linking (reported RTs in results will always be the original RTs)"
                },
                "algorithm_warp_rt_tol_featurelinkerunlabeledkd_openms": {
                    "type": "number",
                    "hidden": false,
                    "description": "Width of RT tolerance window (sec)",
                    "default": 100.0
                },
                "algorithm_warp_mz_tol_featurelinkerunlabeledkd_openms": {
                    "type": "number",
                    "hidden": false,
                    "description": "m/z tolerance (in ppm or Da)",
                    "default": 5.0
                },
                "algorithm_warp_max_pairwise_log_fc_featurelinkerunlabeledkd_openms": {
                    "type": "number",
                    "default": 0.5,
                    "hidden": true,
                    "description": "Maximum absolute log10 fold change between two compatible signals during compatibility graph construction. Two signals from different maps will not be connected by an edge in the compatibility graph if absolute log fold change exceeds this limit (they might still end up in the same connected component, however). Note: this does not limit fold changes in the linking stage, only during RT alignment, where we try to find high-quality alignment anchor points. Setting this to a value < 0 disables the FC check."
                },
                "algorithm_warp_min_rel_cc_size_featurelinkerunlabeledkd_openms": {
                    "type": "number",
                    "hidden": true,
                    "description": "Only connected components containing compatible features from at least max(2, (warp_min_occur * number_of_input_maps)) input maps are considered for computing the warping function",
                    "default": 0.5
                },
                "algorithm_warp_max_nr_conflicts_featurelinkerunlabeledkd_openms": {
                    "type": "integer",
                    "hidden": true,
                    "description": "Allow up to this many conflicts (features from the same map) per connected component to be used for alignment (-1 means allow any number of conflicts)",
                    "default": 0
                },
                "algorithm_link_rt_tol_featurelinkerunlabeledkd_openms": {
                    "type": "number",
                    "hidden": false,
                    "description": "Width of RT tolerance window (sec)",
                    "default": 30
                },
                "algorithm_link_mz_tol_featurelinkerunlabeledkd_openms": {
                    "type": "number",
                    "hidden": false,
                    "description": "m/z tolerance (in ppm or Da)",
                    "default": 10
                },
                "algorithm_link_charge_merging_featurelinkerunlabeledkd_openms": {
                    "type": "string",
                    "default": "With_charge_zero",
                    "hidden": false,
                    "description": "whether to disallow charge mismatches (Identical), allow to link charge zero (i.e., unknown charge state) with every charge state, or disregard charges (Any).",
                    "enum": ["Identical", "With_charge_zero", "Any"]
                },
                "algorithm_link_adduct_merging_featurelinkerunlabeledkd_openms": {
                    "type": "string",
                    "default": "Any",
                    "hidden": false,
                    "description": "whether to only allow the same adduct for linking (Identical), also allow linking features with adduct-free ones, or disregard adducts (Any).",
                    "enum": ["Identical", "With_unknown_adducts", "Any"]
                },
                "algorithm_distance_rt_exponent_featurelinkerunlabeledkd_openms": {
                    "type": "number",
                    "hidden": true,
                    "description": "Normalized RT differences ([0-1], relative to 'max_difference') are raised to this power (using 1 or 2 will be fast, everything else is REALLY slow)",
                    "default": 1
                },
                "algorithm_distance_rt_weight_featurelinkerunlabeledkd_openms": {
                    "type": "number",
                    "hidden": true,
                    "description": "Final RT distances are weighted by this factor",
                    "default": 1
                },
                "algorithm_distance_mz_exponent_featurelinkerunlabeledkd_openms": {
                    "type": "number",
                    "hidden": true,
                    "description": "Normalized ([0-1], relative to 'max_difference') m/z differences are raised to this power (using 1 or 2 will be fast, everything else is REALLY slow)",
                    "default": 2
                },
                "algorithm_distance_mz_weight_featurelinkerunlabeledkd_openms": {
                    "type": "number",
                    "hidden": true,
                    "description": "Final m/z distances are weighted by this factor",
                    "default": 1
                },
                "algorithm_distance_intensity_exponent_featurelinkerunlabeledkd_openms": {
                    "type": "number",
                    "hidden": true,
                    "description": "Differences in relative intensity ([0-1]) are raised to this power (using 1 or 2 will be fast, everything else is REALLY slow)",
                    "default": 1
                },
                "algorithm_distance_intensity_weight_featurelinkerunlabeledkd_openms": {
                    "type": "number",
                    "hidden": true,
                    "description": "Final intensity distances are weighted by this factor",
                    "default": 1
                },
                "algorithm_distance_intensity_log_transform_featurelinkerunlabeledkd_openms": {
                    "type": "string",
                    "default": "enabled",
                    "hidden": true,
                    "description": "Log-transform intensities? If disabled, d = |int_f2 - int_f1| / int_max. If enabled, d = |log(int_f2 + 1) - log(int_f1 + 1)| / log(int_max + 1))",
                    "enum": ["enabled", "disabled"]
                },
                "algorithm_lowess_span_featurelinkerunlabeledkd_openms": {
                    "type": "number",
                    "hidden": true,
                    "description": "Fraction of datapoints (f) to use for each local regression (determines the amount of smoothing). Choosing this parameter in the range .2 to .8 usually results in a good fit.",
                    "default": 0.666666666666667
                },
                "algorithm_lowess_num_iterations_featurelinkerunlabeledkd_openms": {
                    "type": "integer",
                    "hidden": true,
                    "description": "Number of robustifying iterations for lowess fitting.",
                    "default": 3
                },
                "algorithm_lowess_delta_featurelinkerunlabeledkd_openms": {
                    "type": "number",
                    "default": -1,
                    "hidden": true,
                    "description": "Nonnegative parameter which may be used to save computations (recommended value is 0.01 of the range of the input, e.g. for data ranging from 1000 seconds to 2000 seconds, it could be set to 10). Setting a negative value will automatically do this."
                },
                "algorithm_lowess_interpolation_type_featurelinkerunlabeledkd_openms": {
                    "type": "string",
                    "default": "cspline",
                    "hidden": true,
                    "description": "Method to use for interpolation between datapoints computed by lowess. 'linear': Linear interpolation. 'cspline': Use the cubic spline for interpolation. 'akima': Use an akima spline for interpolation",
                    "enum": ["linear", "cspline", "akima"]
                },
                "algorithm_lowess_extrapolation_type_featurelinkerunlabeledkd_openms": {
                    "type": "string",
                    "default": "four-point-linear",
                    "hidden": true,
                    "description": "Method to use for extrapolation outside the data range. 'two-point-linear': Uses a line through the first and last point to extrapolate. 'four-point-linear': Uses a line through the first and second point to extrapolate in front and and a line through the last and second-to-last point in the end. 'global-linear': Uses a linear regression to fit a line through all data points and use it for interpolation.",
                    "enum": ["two-point-linear", "four-point-linear", "global-linear"]
                },
                "keep_subelements_featurelinkerunlabeledkd_openms": {
                    "type": "boolean",
                    "hidden": true,
                    "description": "For consensusXML input only: If set, the sub-features of the inputs are transferred to the output."
                },
                "invert_maprttransformer_openms": {
                    "type": "boolean",
                    "hidden": true,
                    "description": "Invert transformation (approximatively) before applying it"
                },
                "store_original_rt_maprttransformer_openms": {
                    "type": "boolean",
                    "hidden": true,
                    "description": "Store the original retention times (before transformation) as meta data in the output file"
                },
                "model_type_maprttransformer_openms": {
                    "type": "string",
                    "default": "none",
                    "hidden": true,
                    "description": "Type of model",
                    "enum": ["none", "linear", "b_spline", "lowess", "interpolated"]
                },
                "model_linear_symmetric_regression_maprttransformer_openms": {
                    "type": "boolean",
                    "hidden": true,
                    "description": "Perform linear regression on 'y - x' vs. 'y + x', instead of on 'y' vs. 'x'."
                },
                "model_linear_x_weight_maprttransformer_openms": {
                    "type": "string",
                    "default": "x",
                    "hidden": true,
                    "description": "Weight x values",
                    "enum": ["1/x", "1/x2", "ln(x)", "x"]
                },
                "model_linear_y_weight_maprttransformer_openms": {
                    "type": "string",
                    "default": "y",
                    "hidden": true,
                    "description": "Weight y values",
                    "enum": ["1/y", "1/y2", "ln(y)", "y"]
                },
                "model_linear_x_datum_min_maprttransformer_openms": {
                    "type": "number",
                    "default": 1e-15,
                    "hidden": true,
                    "description": "Minimum x value"
                },
                "model_linear_x_datum_max_maprttransformer_openms": {
                    "type": "number",
                    "default": 1000000000000000,
                    "hidden": true,
                    "description": "Maximum x value"
                },
                "model_linear_y_datum_min_maprttransformer_openms": {
                    "type": "number",
                    "default": 1e-15,
                    "hidden": true,
                    "description": "Minimum y value"
                },
                "model_linear_y_datum_max_maprttransformer_openms": {
                    "type": "number",
                    "default": 1000000000000000,
                    "hidden": true,
                    "description": "Maximum y value"
                },
                "model_b_spline_wavelength_maprttransformer_openms": {
                    "type": "number",
                    "hidden": true,
                    "description": "Determines the amount of smoothing by setting the number of nodes for the B-spline. The number is chosen so that the spline approximates a low-pass filter with this cutoff wavelength. The wavelength is given in the same units as the data; a higher value means more smoothing. '0' sets the number of nodes to twice the number of input points."
                },
                "model_b_spline_num_nodes_maprttransformer_openms": {
                    "type": "integer",
                    "hidden": true,
                    "description": "Number of nodes for B-spline fitting. Overrides 'wavelength' if set (to two or greater). A lower value means more smoothing."
                },
                "model_b_spline_extrapolate_maprttransformer_openms": {
                    "type": "string",
                    "default": "linear",
                    "hidden": true,
                    "description": "Method to use for extrapolation beyond the original data range. 'linear': Linear extrapolation using the slope of the B-spline at the corresponding endpoint. 'b_spline': Use the B-spline (as for interpolation). 'constant': Use the constant value of the B-spline at the corresponding endpoint. 'global_linear': Use a linear fit through the data (which will most probably introduce discontinuities at the ends of the data range).",
                    "enum": ["linear", "b_spline", "constant", "global_linear"]
                },
                "model_b_spline_boundary_condition_maprttransformer_openms": {
                    "type": "integer",
                    "hidden": true,
                    "description": "Boundary condition at B-spline endpoints: 0 (value zero), 1 (first derivative zero) or 2 (second derivative zero)"
                },
                "model_lowess_span_maprttransformer_openms": {
                    "type": "number",
                    "hidden": true,
                    "description": "Fraction of datapoints (f) to use for each local regression (determines the amount of smoothing). Choosing this parameter in the range .2 to .8 usually results in a good fit."
                },
                "model_lowess_num_iterations_maprttransformer_openms": {
                    "type": "integer",
                    "hidden": true,
                    "description": "Number of robustifying iterations for lowess fitting."
                },
                "model_lowess_delta_maprttransformer_openms": {
                    "type": "number",
                    "default": -1,
                    "hidden": true,
                    "description": "Nonnegative parameter which may be used to save computations (recommended value is 0.01 of the range of the input, e.g. for data ranging from 1000 seconds to 2000 seconds, it could be set to 10). Setting a negative value will automatically do this."
                },
                "model_lowess_interpolation_type_maprttransformer_openms": {
                    "type": "string",
                    "default": "cspline",
                    "hidden": true,
                    "description": "Method to use for interpolation between datapoints computed by lowess. 'linear': Linear interpolation. 'cspline': Use the cubic spline for interpolation. 'akima': Use an akima spline for interpolation",
                    "enum": ["linear", "cspline", "akima"]
                },
                "model_lowess_extrapolation_type_maprttransformer_openms": {
                    "type": "string",
                    "default": "four-point-linear",
                    "hidden": true,
                    "description": "Method to use for extrapolation outside the data range. 'two-point-linear': Uses a line through the first and last point to extrapolate. 'four-point-linear': Uses a line through the first and second point to extrapolate in front and and a line through the last and second-to-last point in the end. 'global-linear': Uses a linear regression to fit a line through all data points and use it for interpolation.",
                    "enum": ["two-point-linear", "four-point-linear", "global-linear"]
                },
                "model_interpolated_interpolation_type_maprttransformer_openms": {
                    "type": "string",
                    "default": "cspline",
                    "hidden": true,
                    "description": "Type of interpolation to apply.",
                    "enum": ["linear", "cspline", "akima"]
                },
                "model_interpolated_extrapolation_type_maprttransformer_openms": {
                    "type": "string",
                    "default": "two-point-linear",
                    "hidden": true,
                    "description": "Type of extrapolation to apply: two-point-linear: use the first and last data point to build a single linear model, four-point-linear: build two linear models on both ends using the first two / last two points, global-linear: use all points to build a single linear model. Note that global-linear may not be continuous at the border.",
                    "enum": ["two-point-linear", "four-point-linear", "global-linear"]
                }
            }
        },
        "re_quantification": {
            "type": "object",
            "title": "Re-Quantification",
            "description": "",
            "default": "",
            "properties": {
                "extract_mz_window_featurefindermetaboident_openms": {
                    "type": "number",
                    "hidden": false,
                    "description": "m/z window size for chromatogram extraction (unit: ppm if 1 or greater, else Da/Th)"
                },
                "extract_rt_window_featurefindermetaboident_openms": {
                    "type": "number",
                    "hidden": true,
                    "description": "RT window size (in sec.) for chromatogram extraction. If set, this parameter takes precedence over 'extract:rt_quantile'."
                },
                "extract_n_isotopes_featurefindermetaboident_openms": {
                    "type": "integer",
                    "hidden": false,
                    "description": "Number of isotopes to include in each peptide assay."
                },
                "extract_isotope_pmin_featurefindermetaboident_openms": {
                    "type": "number",
                    "hidden": true,
                    "description": "Minimum probability for an isotope to be included in the assay for a peptide. If set, this parameter takes precedence over 'extract:n_isotopes'."
                },
                "detect_peak_width_featurefindermetaboident_openms": {
                    "type": "number",
                    "hidden": false,
                    "description": "Expected elution peak width in seconds, for smoothing (Gauss filter). Also determines the RT extration window, unless set explicitly via 'extract:rt_window'."
                },
                "detect_min_peak_width_featurefindermetaboident_openms": {
                    "type": "number",
                    "hidden": true,
                    "description": "Minimum elution peak width. Absolute value in seconds if 1 or greater, else relative to 'peak_width'."
                },
                "detect_signal_to_noise_featurefindermetaboident_openms": {
                    "type": "number",
                    "hidden": true,
                    "description": "Signal-to-noise threshold for OpenSWATH feature detection"
                },
                "model_type_featurefindermetaboident_openms": {
                    "type": "string",
                    "default": "symmetric",
                    "hidden": false,
                    "description": "Type of elution model to fit to features",
                    "enum": ["symmetric", "asymmetric", "none"]
                },
                "model_add_zeros_featurefindermetaboident_openms": {
                    "type": "number",
                    "hidden": true,
                    "description": "Add zero-intensity points outside the feature range to constrain the model fit. This parameter sets the weight given to these points during model fitting; '0' to disable."
                },
                "model_unweighted_fit_featurefindermetaboident_openms": {
                    "type": "boolean",
                    "hidden": true,
                    "description": "Suppress weighting of mass traces according to theoretical intensities when fitting elution models"
                },
                "model_no_imputation_featurefindermetaboident_openms": {
                    "type": "boolean",
                    "hidden": true,
                    "description": "If fitting the elution model fails for a feature, set its intensity to zero instead of imputing a value from the initial intensity estimate"
                },
                "model_each_trace_featurefindermetaboident_openms": {
                    "type": "boolean",
                    "hidden": true,
                    "description": "Fit elution model to each individual mass trace"
                },
                "model_check_min_area_featurefindermetaboident_openms": {
                    "type": "number",
                    "hidden": true,
                    "description": "Lower bound for the area under the curve of a valid elution model"
                },
                "model_check_boundaries_featurefindermetaboident_openms": {
                    "type": "number",
                    "hidden": true,
                    "description": "Time points corresponding to this fraction of the elution model height have to be within the data region used for model fitting"
                },
                "model_check_width_featurefindermetaboident_openms": {
                    "type": "number",
                    "hidden": true,
                    "description": "Upper limit for acceptable widths of elution models (Gaussian or EGH), expressed in terms of modified (median-based) z-scores. '0' to disable. Not applied to individual mass traces (parameter 'each_trace')."
                },
                "model_check_asymmetry_featurefindermetaboident_openms": {
                    "type": "number",
                    "hidden": true,
                    "description": "Upper limit for acceptable asymmetry of elution models (EGH only), expressed in terms of modified (median-based) z-scores. '0' to disable. Not applied to individual mass traces (parameter 'each_trace')."
                },
                "emgscoring_max_iteration_featurefindermetaboident_openms": {
                    "type": "integer",
                    "hidden": false,
                    "description": "Maximum number of iterations for EMG fitting."
                },
                "emgscoring_init_mom_featurefindermetaboident_openms": {
                    "type": "boolean",
                    "hidden": false,
                    "description": "Alternative initial parameters for fitting through method of moments."
                }
            }
        },
        "quantification": {
            "title": "Quantification",
            "type": "object",
            "description": "",
            "default": "",
            "properties": {
                "algorithm_signal_to_noise_peakpickerhires_openms": {
                    "type": "number",
                    "hidden": false,
                    "description": "Minimal signal-to-noise ratio for a peak to be picked (0.0 disables SNT estimation!)"
                },
                "algorithm_spacing_difference_gap_peakpickerhires_openms": {
                    "type": "number",
                    "hidden": true,
                    "description": "The extension of a peak is stopped if the spacing between two subsequent data points exceeds 'spacing_difference_gap * min_spacing'. 'min_spacing' is the smaller of the two spacings from the peak apex to its two neighboring points. '0' to disable the constraint. Not applicable to chromatograms."
                },
                "algorithm_spacing_difference_peakpickerhires_openms": {
                    "type": "number",
                    "hidden": true,
                    "description": "Maximum allowed difference between points during peak extension, in multiples of the minimal difference between the peak apex and its two neighboring points. If this difference is exceeded a missing point is assumed (see parameter 'missing'). A higher value implies a less stringent peak definition, since individual signals within the peak are allowed to be further apart. '0' to disable the constraint. Not applicable to chromatograms."
                },
                "algorithm_missing_peakpickerhires_openms": {
                    "type": "integer",
                    "hidden": true,
                    "description": "Maximum number of missing points allowed when extending a peak to the left or to the right. A missing data point occurs if the spacing between two subsequent data points exceeds 'spacing_difference * min_spacing'. 'min_spacing' is the smaller of the two spacings from the peak apex to its two neighboring points. Not applicable to chromatograms."
                },
                "algorithm_report_fwhm_peakpickerhires_openms": {
                    "type": "boolean",
                    "hidden": true,
                    "description": "Add metadata for FWHM (as floatDataArray named 'FWHM' or 'FWHM_ppm', depending on param 'report_FWHM_unit') for each picked peak."
                },
                "algorithm_report_fwhm_unit_peakpickerhires_openms": {
                    "type": "string",
                    "default": "relative",
                    "hidden": true,
                    "description": "Unit of FWHM. Either absolute in the unit of input, e.g. 'm/z' for spectra, or relative as ppm (only sensible for spectra, not chromatograms).",
                    "enum": ["relative", "absolute"]
                },
                "algorithm_signaltonoise_max_intensity_peakpickerhires_openms": {
                    "type": "integer",
                    "hidden": true,
                    "description": "maximal intensity considered for histogram construction. By default, it will be calculated automatically (see auto_mode). Only provide this parameter if you know what you are doing (and change 'auto_mode' to '-1')! All intensities EQUAL/ABOVE 'max_intensity' will be added to the LAST histogram bin. If you choose 'max_intensity' too small, the noise estimate might be too small as well.  If chosen too big, the bins become quite large (which you could counter by increasing 'bin_count', which increases runtime). In general, the Median-S/N estimator is more robust to a manual max_intensity than the MeanIterative-S/N."
                },
                "algorithm_signaltonoise_auto_max_stdev_factor_peakpickerhires_openms": {
                    "type": "number",
                    "hidden": true,
                    "description": "parameter for 'max_intensity' estimation (if 'auto_mode' == 0): mean + 'auto_max_stdev_factor' * stdev"
                },
                "algorithm_signaltonoise_auto_max_percentile_peakpickerhires_openms": {
                    "type": "integer",
                    "hidden": true,
                    "description": "parameter for 'max_intensity' estimation (if 'auto_mode' == 1): auto_max_percentile th percentile"
                },
                "algorithm_signaltonoise_auto_mode_peakpickerhires_openms": {
                    "type": "integer",
                    "hidden": true,
                    "description": "method to use to determine maximal intensity: -1 --> use 'max_intensity'; 0 --> 'auto_max_stdev_factor' method (default); 1 --> 'auto_max_percentile' method"
                },
                "algorithm_signaltonoise_win_len_peakpickerhires_openms": {
                    "type": "number",
                    "hidden": true,
                    "description": "window length in Thomson"
                },
                "algorithm_signaltonoise_bin_count_peakpickerhires_openms": {
                    "type": "integer",
                    "hidden": true,
                    "description": "number of bins for intensity values"
                },
                "algorithm_signaltonoise_min_required_elements_peakpickerhires_openms": {
                    "type": "integer",
                    "hidden": true,
                    "description": "minimum number of elements required in a window (otherwise it is considered sparse)"
                },
                "algorithm_signaltonoise_noise_for_empty_window_peakpickerhires_openms": {
                    "type": "number",
                    "default": 100000000000000000000,
                    "hidden": true,
                    "description": "noise value used for sparse windows"
                },
                "algorithm_common_noise_threshold_int_featurefindermetabo_openms": {
                    "type": "number",
                    "default": 10,
                    "hidden": false,
                    "description": "Intensity threshold below which peaks are regarded as noise."
                },
                "algorithm_common_chrom_peak_snr_featurefindermetabo_openms": {
                    "type": "number",
                    "default": 3,
                    "hidden": false,
                    "description": "Minimum signal-to-noise a mass trace should have."
                },
                "algorithm_common_chrom_fwhm_featurefindermetabo_openms": {
                    "type": "number",
                    "default": 5,
                    "hidden": false,
                    "description": "Expected chromatographic peak width (in seconds)."
                },
                "algorithm_mtd_mass_error_ppm_featurefindermetabo_openms": {
                    "type": "number",
                    "default": 20,
                    "hidden": false,
                    "description": "Allowed mass deviation (in ppm)."
                },
                "algorithm_mtd_reestimate_mt_sd_featurefindermetabo_openms": {
                    "type": "boolean",
                    "default": true,
                    "hidden": false,
                    "description": "Enables dynamic re-estimation of m/z variance during mass trace collection stage."
                },
                "algorithm_mtd_quant_method_featurefindermetabo_openms": {
                    "type": "string",
                    "default": "area",
                    "hidden": false,
                    "description": "Method of quantification for mass traces. For LC data 'area' is recommended, 'median' for direct injection data. 'max_height' simply uses the most intense peak in the trace.",
                    "enum": ["area", "median", "max_height"]
                },
                "algorithm_mtd_trace_termination_criterion_featurefindermetabo_openms": {
                    "type": "string",
                    "default": "outlier",
                    "hidden": true,
                    "description": "Termination criterion for the extension of mass traces. In 'outlier' mode, trace extension cancels if a predefined number of consecutive outliers are found (see trace_termination_outliers parameter). In 'sample_rate' mode, trace extension in both directions stops if ratio of found peaks versus visited spectra falls below the 'min_sample_rate' threshold.",
                    "enum": ["outlier", "sample_rate"]
                },
                "algorithm_mtd_trace_termination_outliers_featurefindermetabo_openms": {
                    "type": "integer",
                    "default": 5,
                    "hidden": true,
                    "description": "Mass trace extension in one direction cancels if this number of consecutive spectra with no detectable peaks is reached."
                },
                "algorithm_mtd_min_sample_rate_featurefindermetabo_openms": {
                    "type": "number",
                    "hidden": true,
                    "description": "Minimum fraction of scans along the mass trace that must contain a peak.",
                    "default": 0.5
                },
                "algorithm_mtd_min_trace_length_featurefindermetabo_openms": {
                    "type": "number",
                    "default": 5,
                    "hidden": true,
                    "description": "Minimum expected length of a mass trace (in seconds)."
                },
                "algorithm_mtd_max_trace_length_featurefindermetabo_openms": {
                    "type": "number",
                    "default": -1,
                    "hidden": true,
                    "description": "Maximum expected length of a mass trace (in seconds). Set to a negative value to disable maximal length check during mass trace detection."
                },
                "algorithm_epd_enabled_featurefindermetabo_openms": {
                    "type": "boolean",
                    "default": true,
                    "hidden": false,
                    "description": "Enable splitting of isobaric mass traces by chromatographic peak detection. Disable for direct injection."
                },
                "algorithm_epd_width_filtering_featurefindermetabo_openms": {
                    "type": "string",
                    "default": "fixed",
                    "hidden": false,
                    "description": "Enable filtering of unlikely peak widths. The fixed setting filters out mass traces outside the [min_fwhm, max_fwhm] interval (set parameters accordingly!). The auto setting filters with the 5 and 95% quantiles of the peak width distribution.",
                    "enum": ["off", "fixed", "auto"]
                },
                "algorithm_epd_min_fwhm_featurefindermetabo_openms": {
                    "type": "number",
                    "default": 1,
                    "hidden": true,
                    "description": "Minimum full-width-at-half-maximum of chromatographic peaks (in seconds). Ignored if parameter width_filtering is off or auto."
                },
                "algorithm_epd_max_fwhm_featurefindermetabo_openms": {
                    "type": "number",
                    "default": 60,
                    "hidden": true,
                    "description": "Maximum full-width-at-half-maximum of chromatographic peaks (in seconds). Ignored if parameter width_filtering is off or auto."
                },
                "algorithm_epd_masstrace_snr_filtering_featurefindermetabo_openms": {
                    "type": "boolean",
                    "hidden": true,
                    "description": "Apply post-filtering by signal-to-noise ratio after smoothing."
                },
                "algorithm_ffm_local_rt_range_featurefindermetabo_openms": {
                    "type": "number",
                    "default": 10,
                    "hidden": true,
                    "description": "RT range where to look for coeluting mass traces"
                },
                "algorithm_ffm_local_mz_range_featurefindermetabo_openms": {
                    "type": "number",
                    "default": 6.5,
                    "hidden": true,
                    "description": "MZ range where to look for isotopic mass traces"
                },
                "algorithm_ffm_charge_lower_bound_featurefindermetabo_openms": {
                    "type": "integer",
                    "default": 1,
                    "hidden": true,
                    "description": "Lowest charge state to consider"
                },
                "algorithm_ffm_charge_upper_bound_featurefindermetabo_openms": {
                    "type": "integer",
                    "default": 1,
                    "hidden": true,
                    "description": "Highest charge state to consider"
                },
                "algorithm_ffm_report_summed_ints_featurefindermetabo_openms": {
                    "type": "boolean",
                    "hidden": true,
                    "description": "Set to true for a feature intensity summed up over all traces rather than using monoisotopic trace intensity alone."
                },
                "algorithm_ffm_enable_rt_filtering_featurefindermetabo_openms": {
                    "type": "boolean",
                    "default": true,
                    "hidden": false,
                    "description": "Require sufficient overlap in RT while assembling mass traces. Disable for direct injection data.."
                },
                "algorithm_ffm_isotope_filtering_model_featurefindermetabo_openms": {
                    "type": "string",
                    "default": "'metabolites (5% RMS)'",
                    "enum": ["'metabolites (2% RMS)'", "'metabolites (5% RMS)'", "peptides", "none"],
                    "hidden": false,
                    "description": "Remove/score candidate assemblies based on isotope intensities. SVM isotope models for metabolites were trained with either 2% or 5% RMS error. For peptides, an averagine cosine scoring is used. Select the appropriate noise model according to the quality of measurement or MS device."
                },
                "algorithm_ffm_mz_scoring_13c_featurefindermetabo_openms": {
                    "type": "boolean",
                    "hidden": false,
                    "description": "Use the 13C isotope peak position (~1.003355 Da) as the expected shift in m/z for isotope mass traces (highly recommended for lipidomics!). Disable for general metabolites (as described in Kenar et al. 2014, MCP.)."
                },
                "algorithm_ffm_use_smoothed_intensities_featurefindermetabo_openms": {
                    "type": "boolean",
                    "default": true,
                    "hidden": true,
                    "description": "Use LOWESS intensities instead of raw intensities."
                },
                "algorithm_ffm_report_convex_hulls_featurefindermetabo_openms": {
                    "type": "boolean",
                    "hidden": true,
                    "description": "Augment each reported feature with the convex hull of the underlying mass traces (increases featureXML file size considerably)."
                },
                "algorithm_ffm_remove_single_traces_featurefindermetabo_openms": {
                    "type": "boolean",
                    "hidden": true,
                    "description": "Remove unassembled traces (single traces)."
                },
                "algorithm_ffm_mz_scoring_by_elements_featurefindermetabo_openms": {
                    "type": "boolean",
                    "hidden": true,
                    "description": "Use the m/z range of the assumed elements to detect isotope peaks. A expected m/z range is computed from the isotopes of the assumed elements. If enabled, this ignores 'mz_scoring_13C'"
                },
                "algorithm_ffm_elements_featurefindermetabo_openms": {
                    "type": "string",
                    "default": "CHNOPS",
                    "hidden": true,
                    "description": "Elements assumes to be present in the sample (this influences isotope detection)."
                }
            }
        },
        "input_output_options": {
            "title": "Input/output options",
            "type": "object",
            "fa_icon": "fas fa-terminal",
            "description": "Define where the pipeline should find input data and save output data.",
            "required": ["input", "outdir"],
            "properties": {
                "input": {
                    "type": "string",
                    "format": "file-path",
                    "exists": true,
                    "schema": "assets/schema_input.json",
                    "mimetype": "text/csv",
                    "pattern": "^\\S+\\.csv$",
                    "description": "Path to comma-separated file containing information about the samples in the experiment.",
                    "help_text": "You will need to create a design file with information about the samples in your experiment before running the pipeline. Use this parameter to specify its location. It has to be a comma-separated file with 3 columns, and a header row. See [usage docs](https://nf-co.re/metaboigniter/usage#samplesheet-input).",
                    "fa_icon": "fas fa-file-csv"
                },
                "outdir": {
                    "type": "string",
                    "format": "directory-path",
                    "description": "The output directory where the results will be saved. You have to use absolute paths to storage on Cloud infrastructure.",
                    "fa_icon": "fas fa-folder-open"
                },
                "email": {
                    "type": "string",
                    "description": "Email address for completion summary.",
                    "fa_icon": "fas fa-envelope",
                    "help_text": "Set this parameter to your e-mail address to get a summary e-mail with details of the run sent to you when the workflow exits. If set in your user config file (`~/.nextflow/config`) then you don't need to specify this on the command line for every run.",
                    "pattern": "^([a-zA-Z0-9_\\-\\.]+)@([a-zA-Z0-9_\\-\\.]+)\\.([a-zA-Z]{2,5})$"
                },
                "multiqc_title": {
                    "type": "string",
                    "description": "MultiQC report title. Printed as page header, used for filename if not otherwise specified.",
                    "fa_icon": "fas fa-file-signature"
                },
                "save_intermeds": {
                    "type": "boolean",
                    "description": "Save intermediate files",
                    "hidden": true
                }
            }
        },
        "institutional_config_options": {
            "title": "Institutional config options",
            "type": "object",
            "fa_icon": "fas fa-university",
            "description": "Parameters used to describe centralised config profiles. These should not be edited.",
            "help_text": "The centralised nf-core configuration profiles use a handful of pipeline parameters to describe themselves. This information is then printed to the Nextflow log when you run a pipeline. You should not need to change these values when you run a pipeline.",
            "properties": {
                "custom_config_version": {
                    "type": "string",
                    "description": "Git commit id for Institutional configs.",
                    "default": "master",
                    "hidden": true,
                    "fa_icon": "fas fa-users-cog"
                },
                "custom_config_base": {
                    "type": "string",
                    "description": "Base directory for Institutional configs.",
                    "default": "https://raw.githubusercontent.com/nf-core/configs/master",
                    "hidden": true,
                    "help_text": "If you're running offline, Nextflow will not be able to fetch the institutional config files from the internet. If you don't need them, then this is not a problem. If you do need them, you should download the files from the repo and tell Nextflow where to find them with this parameter.",
                    "fa_icon": "fas fa-users-cog"
                },
                "config_profile_name": {
                    "type": "string",
                    "description": "Institutional config name.",
                    "hidden": true,
                    "fa_icon": "fas fa-users-cog"
                },
                "config_profile_description": {
                    "type": "string",
                    "description": "Institutional config description.",
                    "hidden": true,
                    "fa_icon": "fas fa-users-cog"
                },
                "config_profile_contact": {
                    "type": "string",
                    "description": "Institutional config contact information.",
                    "hidden": true,
                    "fa_icon": "fas fa-users-cog"
                },
                "config_profile_url": {
                    "type": "string",
                    "description": "Institutional config URL link.",
                    "hidden": true,
                    "fa_icon": "fas fa-users-cog"
                }
            }
        },
        "max_job_request_options": {
            "title": "Max job request options",
            "type": "object",
            "fa_icon": "fab fa-acquisitions-incorporated",
            "description": "Set the top limit for requested resources for any single job.",
            "help_text": "If you are running on a smaller system, a pipeline step requesting more resources than are available may cause the Nextflow to stop the run with an error. These options allow you to cap the maximum resources requested by any single job so that the pipeline will run on your system.\n\nNote that you can not _increase_ the resources requested by any job using these options. For that you will need your own configuration file. See [the nf-core website](https://nf-co.re/usage/configuration) for details.",
            "properties": {
                "max_cpus": {
                    "type": "integer",
                    "description": "Maximum number of CPUs that can be requested for any single job.",
                    "default": 16,
                    "fa_icon": "fas fa-microchip",
                    "hidden": true,
                    "help_text": "Use to set an upper-limit for the CPU requirement for each process. Should be an integer e.g. `--max_cpus 1`"
                },
                "max_memory": {
                    "type": "string",
                    "description": "Maximum amount of memory that can be requested for any single job.",
                    "default": "128.GB",
                    "fa_icon": "fas fa-memory",
                    "pattern": "^\\d+(\\.\\d+)?\\.?\\s*(K|M|G|T)?B$",
                    "hidden": true,
                    "help_text": "Use to set an upper-limit for the memory requirement for each process. Should be a string in the format integer-unit e.g. `--max_memory '8.GB'`"
                },
                "max_time": {
                    "type": "string",
                    "description": "Maximum amount of time that can be requested for any single job.",
                    "default": "240.h",
                    "fa_icon": "far fa-clock",
                    "pattern": "^(\\d+\\.?\\s*(s|m|h|d|day)\\s*)+$",
                    "hidden": true,
                    "help_text": "Use to set an upper-limit for the time requirement for each process. Should be a string in the format integer-unit e.g. `--max_time '2.h'`"
                }
            }
        },
        "generic_options": {
            "title": "Generic options",
            "type": "object",
            "fa_icon": "fas fa-file-import",
            "description": "Less common options for the pipeline, typically set in a config file.",
            "help_text": "These options are common to all nf-core pipelines and allow you to customise some of the core preferences for how the pipeline runs.\n\nTypically these options would be set in a Nextflow config file loaded for all pipeline runs, such as `~/.nextflow/config`.",
            "properties": {
                "help": {
                    "type": "boolean",
                    "description": "Display help text.",
                    "fa_icon": "fas fa-question-circle",
                    "hidden": true
                },
                "version": {
                    "type": "boolean",
                    "description": "Display version and exit.",
                    "fa_icon": "fas fa-question-circle",
                    "hidden": true
                },
                "publish_dir_mode": {
                    "type": "string",
                    "default": "copy",
                    "description": "Method used to save pipeline results to output directory.",
                    "help_text": "The Nextflow `publishDir` option specifies which intermediate files should be saved to the output directory. This option tells the pipeline what method should be used to move these files. See [Nextflow docs](https://www.nextflow.io/docs/latest/process.html#publishdir) for details.",
                    "fa_icon": "fas fa-copy",
                    "enum": ["symlink", "rellink", "link", "copy", "copyNoFollow", "move"],
                    "hidden": true
                },
                "email_on_fail": {
                    "type": "string",
                    "description": "Email address for completion summary, only when pipeline fails.",
                    "fa_icon": "fas fa-exclamation-triangle",
                    "pattern": "^([a-zA-Z0-9_\\-\\.]+)@([a-zA-Z0-9_\\-\\.]+)\\.([a-zA-Z]{2,5})$",
                    "help_text": "An email address to send a summary email to when the pipeline is completed - ONLY sent if the pipeline does not exit successfully.",
                    "hidden": true
                },
                "plaintext_email": {
                    "type": "boolean",
                    "description": "Send plain-text email instead of HTML.",
                    "fa_icon": "fas fa-remove-format",
                    "hidden": true
                },
                "monochrome_logs": {
                    "type": "boolean",
                    "description": "Do not use coloured log outputs.",
                    "fa_icon": "fas fa-palette",
                    "hidden": true
                },
                "hook_url": {
                    "type": "string",
                    "description": "Incoming hook URL for messaging service",
                    "fa_icon": "fas fa-people-group",
                    "help_text": "Incoming hook URL for messaging service. Currently, MS Teams and Slack are supported.",
                    "hidden": true
                },
                "validate_params": {
                    "type": "boolean",
                    "description": "Boolean whether to validate parameters against the schema at runtime",
                    "default": true,
                    "fa_icon": "fas fa-check-square",
                    "hidden": true
                },
                "validationShowHiddenParams": {
                    "type": "boolean",
                    "fa_icon": "far fa-eye-slash",
                    "description": "Show all params when using `--help`",
                    "hidden": true,
                    "help_text": "By default, parameters set as _hidden_ in the schema are not shown on the command line when a user runs with `--help`. Specifying this option will tell the pipeline to show all parameters."
                },
                "validationFailUnrecognisedParams": {
                    "type": "boolean",
                    "fa_icon": "far fa-check-circle",
                    "description": "Validation of parameters fails when an unrecognised parameter is found.",
                    "hidden": true,
                    "help_text": "By default, when an unrecognised parameter is found, it returns a warinig."
                },
                "validationLenientMode": {
                    "type": "boolean",
                    "fa_icon": "far fa-check-circle",
                    "description": "Validation of parameters in lenient more.",
                    "hidden": true,
                    "help_text": "Allows string values that are parseable as numbers or booleans. For further information see [JSONSchema docs](https://github.com/everit-org/json-schema#lenient-mode)."
                },
                "max_multiqc_email_size": {
                    "type": "string",
                    "description": "File size limit when attaching MultiQC reports to summary emails.",
                    "pattern": "^\\d+(\\.\\d+)?\\.?\\s*(K|M|G|T)?B$",
                    "default": "25.MB",
                    "fa_icon": "fas fa-file-upload",
                    "hidden": true
                },
                "multiqc_config": {
                    "type": "string",
                    "format": "file-path",
                    "description": "Custom config file to supply to MultiQC.",
                    "fa_icon": "fas fa-cog",
                    "hidden": true
                },
                "multiqc_logo": {
                    "type": "string",
                    "description": "Custom logo file to supply to MultiQC. File name must also be set in the MultiQC config file",
                    "fa_icon": "fas fa-image",
                    "hidden": true
                },
                "multiqc_methods_description": {
                    "type": "string",
                    "description": "Custom MultiQC yaml file containing HTML including a methods description.",
                    "fa_icon": "fas fa-cog"
                }
            }
        }
    },
    "allOf": [
        {
            "$ref": "#/definitions/generic_controls"
        },
        {
            "$ref": "#/definitions/mapping_and_identification"
        },
        {
            "$ref": "#/definitions/annotation"
        },
        {
            "$ref": "#/definitions/alignment_and_linking"
        },
        {
            "$ref": "#/definitions/re_quantification"
        },
        {
            "$ref": "#/definitions/quantification"
        },
        {
            "$ref": "#/definitions/input_output_options"
        },
        {
            "$ref": "#/definitions/institutional_config_options"
        },
        {
            "$ref": "#/definitions/max_job_request_options"
        },
        {
            "$ref": "#/definitions/generic_options"
        }
    ]
}
